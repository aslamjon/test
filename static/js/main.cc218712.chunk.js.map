{"version":3,"sources":["redux/auth/auth.type.js","redux/auth/auth.reducer.js","redux/products/products.type.js","redux/products/products.reducer.js","redux/root-reducer.js","redux/store.js","redux/auth/auth.selector.js","components/Table/Table.jsx","components/Table/index.js","redux/products/products.selector.js","pages/Home/Home.jsx","pages/Home/index.js","redux/products/products.action.js","pages/SignIn/SignInStyle.jsx","pages/SignIn/SignIn.jsx","pages/SignIn/index.js","redux/auth/auth.action.js","pages/SignUp/index.js","pages/SignUp/SignUp.jsx","App.js","components/global/Global.style.jsx","components/global/index.js","index.js"],"names":["AuthTypes","INITIAL_STATE","currentUser","AuthReduser","state","action","type","payload","ProductsTypes","products","search","ProductsReduser","rootReducer","combineReducers","user","middlewares","thunk","store","createStore","applyMiddleware","createSelector","value","SearchBoxStyled","styled","div","TableStyled","SpinerBoxStyled","antIcon","LoadingOutlined","style","fontSize","spin","TableComponent","dataSource","columns","ProductsSelector","Search","Input","useState","SearchProduct","SetSearchProduct","dataOrder","setDataOrder","filterData","main","newDataSource","temp","map","val","index","name","toLowerCase","includes","startsWith","push","key","sellPrice","count","direction","placeholder","onSearch","enterButton","onChange","pagination","filters","sorter","extra","console","log","order","orderBy","currentDataSource","indicator","selectProducts","SearchProductSelector","title","dataIndex","sortDirections","render","mapStateToProps","createStructuredSelector","Home","connect","dispatch","SetProducts","token","params","JSON","stringify","size","page","stock","exist","location","config","headers","axios","post","then","res","data","items","catch","err","toast","error","position","POSITION","TOP_RIGHT","getProduct","stocks","UZS","defaultPageSize","showSizeChanger","pageSizeOptions","BackgroundStyledInSignin","CardStyledInSignIn","form","SignIn","SetCurrentUser","_username","_password","_subdomain","setForm","handleChange","event","target","className","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","LockOutlined","GlobalOutlined","htmlType","onClick","URLSearchParams","preventDefault","to","SignUp","App","this","props","exact","path","component","Component","GlobalStyle","createGlobalStyle","Global","children","theme","dark","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cc218712.chunk.js","sourcesContent":["export const AuthTypes = {\n    SET_AUTH: \"SET_AUTH\"\n}","import { AuthTypes } from './auth.type';\n\n\nconst INITIAL_STATE = {\n    currentUser: '',\n}\nconst AuthReduser = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case AuthTypes.SET_AUTH:\n            return {\n                ...state,\n                currentUser: action.payload\n            }        \n        default:\n            return state;\n    }\n}\nexport default AuthReduser;","export const ProductsTypes = {\n    SET_PRODUCTS: \"SET_PRODUCTS\",\n    SEARCH_PRODUCT: \"SEARCH_PRODUCT\",\n    SET_DATA_FOR_TABLE: \"SET_DATA_FOR_TABLE\"\n}","import { ProductsTypes } from './products.type'\n\nconst INITIAL_STATE = {\n    products: 0,\n    search: ''\n}\nconst ProductsReduser = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ProductsTypes.SET_PRODUCTS:\n            return {\n                ...state,\n                products: action.payload\n            }        \n        case ProductsTypes.SEARCH_PRODUCT:\n            return {\n                ...state,\n                search: action.payload\n            }              \n        default:\n            return state;\n    }\n}\nexport default ProductsReduser;","import { combineReducers } from \"redux\";\nimport AuthReduser from \"./auth/auth.reducer\";\nimport ProductsReduser from \"./products/products.reducer\";\n\n\n\nconst rootReducer = combineReducers({\n    user: AuthReduser,\n    products: ProductsReduser\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n// thunk for async logic\nimport rootReducer from './root-reducer';\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n","import { createSelector } from \"reselect\";\n\nconst selectUser = state => state.user;\n\nexport const currentUser = createSelector(\n    [selectUser],\n    (value) => value.currentUser\n)","import React, { useState } from 'react'\nimport { Table, Spin, Space, Input } from 'antd';\nimport styled from 'styled-components';\n\nimport { LoadingOutlined } from '@ant-design/icons'\nimport { orderBy, startsWith } from 'lodash';\n\nconst SearchBoxStyled = styled.div`\n    padding: 15px;\n    div {\n        width: 300px;\n    }\n`;\nconst TableStyled = styled.div`\n    ul {\n        padding: 0 15px;\n    }\n`;\nconst SpinerBoxStyled = styled.div`\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    div {\n        margin: 10px;\n    }\n`;\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\nconst TableComponent = ({ dataSource, columns, ProductsSelector }) => {\n    \n    const { Search } = Input;\n\n    const [SearchProduct, SetSearchProduct] = useState('');\n    const [dataOrder, setDataOrder] = useState(false);\n\n    const onSearch = value => SetSearchProduct(value);\n\n\n    function onChange(pagination, filters, sorter, extra) {\n        console.log('params', pagination, filters, sorter, extra);\n        if (sorter.order) setDataOrder(orderBy(extra.currentDataSource, ['name'], ['asc']));\n        else setDataOrder(false)\n    }\n    // function for search input\n    const filterData = (main) => {\n        let newDataSource = [];\n        let temp = [];\n        main.map((val, index) => {\n            if (val.name.toLowerCase().includes(SearchProduct.toLowerCase())) {\n                if (startsWith(val.name.toLowerCase(), SearchProduct.toLowerCase()))\n                    newDataSource.push({\n                        key: index + 1,\n                        name: val.name,\n                        sellPrice: val.sellPrice,\n                        count: val.count\n                    })\n                else \n                    temp.push({\n                        key: index + 1,\n                        name: val.name,\n                        sellPrice: val.sellPrice,\n                        count: val.count\n                    })\n            }\n            return val\n        })\n        newDataSource.push(...temp)\n        return newDataSource;\n    }\n\n    if (SearchProduct !== '' && !dataOrder)\n        dataSource = filterData(dataSource)\n    else if (SearchProduct !== '' && dataOrder)\n        dataSource = filterData(dataOrder)\n    \n    return (\n        <>\n            {!ProductsSelector ?\n                <SpinerBoxStyled>\n                    <Spin indicator={antIcon} />\n                    Loading...\n                </SpinerBoxStyled>\n                :\n                <>\n                    <SearchBoxStyled>\n                        <Space direction=\"vertical\">\n                            <Search placeholder=\"input search text\" onSearch={onSearch} enterButton />\n                        </Space>\n                    </SearchBoxStyled>\n                    \n                    <TableStyled>\n                        <Table dataSource={dataOrder ? dataOrder : dataSource} columns={columns} onChange={onChange} />\n                    </TableStyled>\n                </>\n            }\n        </>\n    )\n}\n\n\n\nexport default TableComponent;\n","import TableComponent from \"./Table\";\n\nexport default TableComponent;","import { createSelector } from \"reselect\";\n\nconst selectProducts = state => state.products;\n\nexport const ProductsSelector = createSelector(\n    [selectProducts],\n    (value) => value.products\n)\n\nexport const SearchProductSelector = createSelector(\n    [selectProducts],\n    (value) => value.search\n)","import React from 'react'\nimport axios from 'axios';\nimport { orderBy } from 'lodash'\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport Table from '../../components/Table';\nimport { ProductsSelector, SearchProductSelector } from '../../redux/products/products.selector';\nimport { setProducts } from '../../redux/products/products.action';\n\nconst columns = [\n    {\n        key: 'key',\n        title: '№',\n        dataIndex: 'key',\n    },\n    {\n        key: 'name',\n        title: 'Name',\n        dataIndex: 'name',\n        sorter: true,\n        sortDirections: ['ascend'],\n        render: name => orderBy(name, ['name'], ['asc'])\n    },\n    {\n        title: 'Sell Price',\n        dataIndex: 'sellPrice',\n        key: 'sellPrice',\n    },\n    {\n        title: 'Count',\n        dataIndex: 'count',\n        key: 'count',\n    },\n];\n\nlet dataSource = false;\nconst Home = ({ token, ProductsSelector, SetProducts }) => {\n    const notify = () => {\n        toast.error(\"Error: Server Error !\", {\n            position: toast.POSITION.TOP_RIGHT\n        });\n    }\n    // get Product from API\n    const getProduct = () => {\n        const url = 'https://face.ox-sys.com/variations'\n        const params = JSON.stringify({\n            size: 286,\n            page: 1,\n            stock: {\n                exist: true,\n                location: [\n                    42\n                ]\n            },\n        })\n        const config = {\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            }\n        }\n        axios.post(url, params, config)\n            .then(res => {\n                SetProducts(res.data.items)\n                return res\n            }).catch(err => notify())\n    }\n    const DataToTable = () => {\n        ProductsSelector && ProductsSelector.map((val, index) => dataSource.push({\n            key: index+1,\n            name: val.name,\n            sellPrice: val.stocks[0].sellPrice.UZS + \" UZS\",\n            count: val.stocks[0].count\n        }))\n    }\n    dataSource = [];\n    if (!dataSource) {\n        getProduct();\n        DataToTable()\n    }\n    // data for test\n    let dataSource1 = [\n        {\n            key: 1,\n            name: \"Olma\",\n            count: 1,\n            sellPrice: 100\n        },\n        {\n            key: 2,\n            name: \"Nok\",\n            count: 2,\n            sellPrice: 100\n        },\n        {\n            key: 3,\n            name: \"Banan\",\n            count: 4,\n            sellPrice: 100\n        },\n        {\n            key: 4,\n            name: \"Ananas\",\n            count: 4,\n            sellPrice: 100\n        },\n        {\n            key: 5,\n            name: \"Olcha\",\n            count: 5,\n            sellPrice: 100\n        },\n        {\n            key: 6,\n            name: \"Anor\",\n            count: 6,\n            sellPrice: 100\n        }\n    ]\n\n    return (\n        <>\n            <ToastContainer />\n            <Table ProductsSelector={ProductsSelector} dataSource={dataSource} columns={columns}\n                pagination={{ defaultPageSize: 10, showSizeChanger: true, pageSizeOptions: ['10', '20', '30'] }} />\n        </>\n    )\n}\nconst mapStateToProps = createStructuredSelector({\n    ProductsSelector,\n    SearchProduct: SearchProductSelector,\n})\n\nconst mapDispathToProps = dispatch => ({\n    SetProducts: value => dispatch(setProducts(value)),\n})\n\nexport default connect(mapStateToProps, mapDispathToProps)(Home);\n\n","import Home from \"./Home\";\n\nexport default Home;","import { ProductsTypes } from './products.type'\n\nexport const setProducts = item => ({\n    type: ProductsTypes.SET_PRODUCTS,\n    payload: item\n})\nexport const searchProducts = item => ({\n    type: ProductsTypes.SEARCH_PRODUCT,\n    payload: item\n})","\nimport styled from \"styled-components\";\n\n\nconst BackgroundStyledInSignin= styled.div`\n    background: #212529;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst CardStyledInSignIn = styled.form`\n    padding: 15px 20px;\n    background: rgba(255,255,255,0.9);\n    border-radius: 10px;\n    box-shadow: 0px 0px 8px rgba(0,0,0,0.2);\n`;\n\nexport {\n    BackgroundStyledInSignin,\n    CardStyledInSignIn\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport axios from 'axios';\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined, GlobalOutlined } from '@ant-design/icons';\n\nimport { setCurrentUser } from '../../redux/auth/auth.action'\nimport { currentUser } from '../../redux/auth/auth.selector';\nimport {\n    BackgroundStyledInSignin,\n    CardStyledInSignIn } from './SignInStyle';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst SignIn = ({ SetCurrentUser }) => {\n    const notify = () => {\n        toast.error(\"Error: Unauthorized !\", {\n            position: toast.POSITION.TOP_RIGHT\n        });\n    }\n    const [form, setForm] = useState({\n        _username: '',\n        _password: '',\n        _subdomain: ''\n    });\n    const handleChange = (event) => {\n        setForm(form => ({ ...form, [event.target.name]: event.target.value }));\n    }\n    const submitHanding = (event) => {\n        const url = 'https://face.ox-sys.com/security/auth_check';\n        const params = new URLSearchParams(form);\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        }\n        axios.post(url, params, config)\n            .then(res => res.data.token && SetCurrentUser({ ...form, token: res.data.token }))\n            .catch(err => notify());\n        event.preventDefault();\n    }\n    const { _username, _password, _subdomain } = form;\n    \n        \n    return (\n\n        <BackgroundStyledInSignin>\n            <ToastContainer />\n            <CardStyledInSignIn>\n                <Form\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                >\n                    <Form.Item\n                        name=\"_username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Username!',\n                            },\n                        ]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" name=\"_username\" value={_username} onChange={handleChange}/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"_password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Password!',\n                            },\n                        ]}\n                    >\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            type=\"password\"\n                            name=\"_password\"\n                            placeholder=\"Password\"\n                            value={_password} onChange={handleChange}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"_subdomain\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your Subdomain!',\n                            },\n                        ]}\n                    >\n                        <Input\n                            prefix={<GlobalOutlined className=\"site-form-item-icon\" />}\n                            type=\"text\"\n                            placeholder=\"Subdomain\"\n                            name=\"_subdomain\"\n                            value={_subdomain} onChange={handleChange}\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"button\" onClick={submitHanding} className=\"login-form-button\">\n                            Log in\n                        </Button>\n                        Or <Link to=\"/signup\">register now!</Link>\n                    </Form.Item>\n                </Form>\n            </CardStyledInSignIn>\n        </BackgroundStyledInSignin>\n    )\n}\nconst mapStateToProps = createStructuredSelector({\n    currentUser\n})\n\nconst mapDispathToProps = dispatch => ({\n    SetCurrentUser: value => dispatch(setCurrentUser(value)),\n})\n\nexport default connect(mapStateToProps, mapDispathToProps)(SignIn);\n","import SignIn from \"./SignIn\";\n\nexport default SignIn;","import { AuthTypes } from './auth.type';\n\nexport const setCurrentUser = item => ({\n    type: AuthTypes.SET_AUTH,\n    payload: item\n})","import SignUp from \"./SignUp\";\n\nexport default SignUp;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SignUp = () => {\n    return (\n        <>\n            Now Doesn't access to Sign Up\n            <Link className=\"btn btn-outline-primary\" to=\"/\">Home</Link>\n        </>\n    )\n}\n\nexport default SignUp\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport 'antd/dist/antd.css';\n\nimport { currentUser } from './redux/auth/auth.selector';\nimport Home from './pages/Home';\nimport SignIn from './pages/SignIn';\nimport SignUp from './pages/SignUp';\n\nclass App extends Component {\n  render() {\n    const {currentUser} = this.props;\n    return (\n      <div>\n          <Switch>\n            <Route exact path='/' render={() => currentUser.token ? <Redirect to=\"/test\" /> : <SignIn />}/>\n            <Route exact path='/test' render={() => currentUser.token ? <Home token={currentUser.token}/> : <SignIn />}/>\n            <Route  path='/test/signup' component={SignUp} />\n            <Route  path='/test/signin' render={() => currentUser.token ? <Redirect to=\"/test\" /> : <SignIn />} />\n          </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = createStructuredSelector({\n  currentUser\n})\nexport default connect(mapStateToProps, null)(App);\n","import { createGlobalStyle, ThemeProvider } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  font-size: 14px;\n  background: #212529;\n  color: #fff;\n}\n`;\nconst Global = ({children}) => {\n    return <ThemeProvider theme={{dark: false}}>\n        <GlobalStyle/>\n        {children}\n    </ThemeProvider>\n}\nexport default Global;","import Global from \"./Global.style\";\n\nexport default Global;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './App';\nimport Global from './components/global';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n        <Global >\n          <App />\n        </Global>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}